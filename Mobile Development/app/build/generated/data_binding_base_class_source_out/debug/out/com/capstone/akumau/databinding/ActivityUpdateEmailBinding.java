// Generated by view binder compiler. Do not edit!
package com.capstone.akumau.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.akumau.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateEmailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAuth;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final LinearLayout layoutUpdateEmail;

  @NonNull
  public final LinearLayout layoutVerificationPassword;

  private ActivityUpdateEmailBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAuth,
      @NonNull Button btnUpdate, @NonNull EditText etEmail, @NonNull EditText etPassword,
      @NonNull LinearLayout layoutUpdateEmail, @NonNull LinearLayout layoutVerificationPassword) {
    this.rootView = rootView;
    this.btnAuth = btnAuth;
    this.btnUpdate = btnUpdate;
    this.etEmail = etEmail;
    this.etPassword = etPassword;
    this.layoutUpdateEmail = layoutUpdateEmail;
    this.layoutVerificationPassword = layoutVerificationPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateEmailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateEmailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_email, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateEmailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAuth;
      Button btnAuth = ViewBindings.findChildViewById(rootView, id);
      if (btnAuth == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etPassword;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.layoutUpdateEmail;
      LinearLayout layoutUpdateEmail = ViewBindings.findChildViewById(rootView, id);
      if (layoutUpdateEmail == null) {
        break missingId;
      }

      id = R.id.layoutVerificationPassword;
      LinearLayout layoutVerificationPassword = ViewBindings.findChildViewById(rootView, id);
      if (layoutVerificationPassword == null) {
        break missingId;
      }

      return new ActivityUpdateEmailBinding((ConstraintLayout) rootView, btnAuth, btnUpdate,
          etEmail, etPassword, layoutUpdateEmail, layoutVerificationPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
